{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","utils/theme.utils.js","component/FolderItem.jsx","component/TodoListFolder.jsx","component/TableContent.jsx","component/InputTodo.jsx","component/TodoContent.jsx","routes/TodosApp.jsx","index.js"],"names":["spin","keyframes","App","animation","usePrefersReducedMotion","undefined","w","backgroundColor","minHeight","direction","align","justify","color","fontSize","height","src","logo","className","alt","pointerEvents","href","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","pxToRem","px","folderState","atom","key","default","FolderItem","name","useRecoilState","folder","setFolderState","bg","borderRadius","cursor","_hover","onClick","pl","TodoListFolder","React","useState","listFolder","setListFolder","folderName","setFolderName","handleSubmit","e","preventDefault","trim","prevFolder","onSubmit","as","ml","variant","value","placeholder","size","onChange","_active","h","length","textDecoration","mt","p","map","item","idx","editTodoState","TableContent","props","id","todo","createdAt","isCompleted","isChecked","setCheck","folderTodoListState","folderTodoList","setFolderTodoList","setEditTodoState","checked","isNumeric","insetInline","mr","data","slice","todoListState","selector","get","set","newValue","todoList","InputTodo","useRecoilValue","editTodo","setEditTodo","input","setInput","inputRef","useRef","console","log","useEffect","isNaN","current","focus","Date","toLocaleDateString","toLocaleTimeString","isDisabled","_focus","ref","children","TodoContent","isCheckList","setCheckList","Array","from","isAllChecked","every","Boolean","isIndeterminate","some","handleCheck","isCheck","prevCheckList","text","m","wrap","alignSelf","mb","ele","borderBottom","rest","TodosApp","overflow","bgGradient","pos","top","bgClip","flex","shadow","ReactDOM","render","StrictMode","path","element","document","getElementById"],"mappings":"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","file":"static/js/main.5b9103aa.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\r\nimport './App.css';\r\nimport { Box, Flex, Image, keyframes, Link, Text, usePrefersReducedMotion } from '@chakra-ui/react';\r\nconst spin = keyframes`\r\nfrom {transform: rotate(0deg);}\r\nto {transform: rotate(360deg);}\r\n`\r\nfunction App() {\r\n  const preferedReducedMotion = usePrefersReducedMotion();\r\n  const animation = preferedReducedMotion ? undefined : `${spin} infinite 20s linear`\r\n  return (\r\n    <Box w='100%' >\r\n      <Flex backgroundColor={'#282c34'} \r\n      minHeight={'100vh'} \r\n      direction={'column'} \r\n      align={'center'} \r\n      justify={'center'} \r\n      color='white' \r\n      fontSize= {'2xl'}\r\n      >\r\n        <Image animation={animation} height={'40vmin'}\r\n        src={logo} className=\"App-logo\" alt=\"logo\" pointerEvents={'none'}\r\n        />\r\n        <Text>\r\n          Edit <code>src/App.js</code> and save to reload.\r\n        </Text>\r\n        <Link\r\n          href=\"https://reactjs.org\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n          color={'#61dafb'}\r\n        >\r\n          Learn React\r\n        </Link>\r\n      </Flex>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","export const pxToRem = (px) => {\r\n    const remValue = (px * 100)/(1080 + 1024 + 512)\r\n    return `${remValue}rem`\r\n}","import { ListItem, Text } from \"@chakra-ui/react\";\r\nimport { atom, useRecoilState } from \"recoil\";\r\nimport { pxToRem } from \"../utils/theme.utils\";\r\n\r\nexport const folderState = atom({\r\n  key: \"folderState\",\r\n  default: \"\"\r\n});\r\n\r\nexport default function FolderItem({ name }) {\r\n  const [folder, setFolderState] = useRecoilState(folderState);\r\n\r\n  return (\r\n    <ListItem\r\n      bg={folder === name ? \"orange.200\" : \"\"}\r\n      borderRadius={pxToRem(5)}\r\n      cursor={\"pointer\"}\r\n      _hover={{ bg: folder !== name ? \"orange.200\" : \"\" }}\r\n      onClick={() => {\r\n        setFolderState(name);\r\n      }}\r\n    >\r\n      <Text pl={pxToRem(15)}>{name}</Text>\r\n    </ListItem>\r\n  );\r\n}\r\n","import { AddIcon } from \"@chakra-ui/icons\";\r\nimport { Box, Circle, Flex, FormControl, Input, List, Stack, Text } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { pxToRem } from \"../utils/theme.utils\";\r\nimport FolderItem, { folderState } from \"./FolderItem\";\r\n\r\nexport default function TodoListFolder() {\r\n    const [listFolder, setListFolder] = React.useState([]);\r\n    const [folderName,setFolderName] = React.useState('');\r\n    const [, setFolderState] = useRecoilState(folderState);\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(!folderName.trim())\r\n            return; \r\n        setListFolder(prevFolder => [...prevFolder, folderName]);\r\n        setFolderName('');\r\n        setFolderState(folderName)\r\n    }\r\n    const handleChange = (e) => {\r\n        setFolderName(e.target.value);\r\n    }\r\n    return (\r\n        <Flex direction={\"column\"}>\r\n            <FormControl onSubmit={handleSubmit} as='form'>\r\n                <Stack direction={\"row\"} align={\"end\"} justify={\"space-evenly\"} ml={pxToRem(20)}>\r\n                    <Input variant='flushed' value={folderName} placeholder='Enter todo folder name...' size={'xs'} w={pxToRem(200)} onChange={handleChange}  />\r\n                    <Circle size={pxToRem(30)} bg={\"orange\"} color={\"white\"} cursor={\"pointer\"} _hover={{bg: 'orange.300'}}\r\n                    _active={{bg: 'orange.200'}}\r\n                    onClick={handleSubmit}>\r\n                        <AddIcon w={pxToRem(20)} h={pxToRem(20)} _active={{w:'2', h: '2'}}/>\r\n                    </Circle>\r\n                </Stack>\r\n            </FormControl>\r\n            {\r\n                listFolder.length ?\r\n                (\r\n                    <Flex direction={'column'}>\r\n                        <Box pl={pxToRem(20)}>\r\n                            <Text textDecoration={\"underline\"} mt={pxToRem(10)}>TodoFolder</Text>\r\n                        </Box>\r\n                        <Box>\r\n                        <List p={`0 ${pxToRem(5)}`}>\r\n                            {\r\n                                listFolder.map((item, idx) => <FolderItem key={idx} name={item}/>)\r\n                            }\r\n                        </List>\r\n                        </Box>\r\n                    </Flex>\r\n                ) :\r\n                null\r\n            }\r\n        </Flex>\r\n    )\r\n}","import { DeleteIcon, EditIcon } from \"@chakra-ui/icons\";\r\nimport { Checkbox, Circle, HStack, Td, Tr } from \"@chakra-ui/react\";\r\nimport { atom, useRecoilState } from \"recoil\";\r\nimport { pxToRem } from \"../utils/theme.utils\";\r\nimport { folderTodoListState } from \"./InputTodo\";\r\n\r\nexport const editTodoState = atom({\r\n  key: \"editTodoState\",\r\n  default: undefined\r\n})\r\n\r\nexport default function TableContent(props) {\r\n  const { id, todo, createdAt, isCompleted, isChecked,setCheck } = props;\r\n  const [folderTodoList, setFolderTodoList] = useRecoilState(folderTodoListState);\r\n  const [, setEditTodoState] = useRecoilState(editTodoState); \r\n  const handleDelete = () => {\r\n    setFolderTodoList([...folderTodoList.data.slice(0, id-1), ...folderTodoList.data.slice(id)])\r\n  }\r\n  return (\r\n    <Tr _hover={{bg:'green.300', borderRadius: pxToRem(10), cursor: 'pointer'}}>\r\n      <Td p={pxToRem(5)}><Checkbox isChecked={isChecked} onChange={(e) => setCheck(id-1, e.target.checked)}/></Td>\r\n      <Td p={pxToRem(5)} isNumeric>{id}</Td>\r\n      <Td p={pxToRem(5)}>{todo}</Td>\r\n      <Td p={pxToRem(5)}>{createdAt}</Td>\r\n      <Td p={pxToRem(5)}>{isCompleted ? \"Completed\" : \"Incomplete\"}</Td>\r\n      <Td p={pxToRem(5)} insetInline={'auto'}>\r\n        <HStack>\r\n          <Circle size={pxToRem(30)} _hover={{bg: 'green.400'}} onClick={() => setEditTodoState(id -1)}>\r\n            <EditIcon w={pxToRem(20)} h={pxToRem(20)} color= 'blackAlpha.500' mr={pxToRem(2.5)} _active={{w:'2', h:'2'}}/>\r\n          </Circle>\r\n          <Circle size={pxToRem(30)} _hover={{ bg: 'green.400'}} onClick={handleDelete}>\r\n            <DeleteIcon color='red.700' ml={pxToRem(2.5)} w={pxToRem(20)} h={pxToRem(20)} _active={{w:'2', h:'2'}}/>\r\n          </Circle>\r\n        </HStack>\r\n      </Td>\r\n    </Tr>\r\n  );\r\n}\r\n","import { AddIcon } from \"@chakra-ui/icons\";\r\nimport {\r\n  Circle,\r\n  FormControl,\r\n  Input,\r\n  InputGroup,\r\n  InputRightElement\r\n} from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport { atom, selector, useRecoilState, useRecoilValue } from \"recoil\";\r\nimport { pxToRem } from \"../utils/theme.utils\";\r\nimport { folderState } from \"./FolderItem\";\r\nimport { editTodoState } from \"./TableContent\";\r\n\r\nexport const todoListState = atom({\r\n  key: \"todoListState\",\r\n  default: {}\r\n});\r\n\r\nexport const folderTodoListState = selector({\r\n  key: \"folderTodoListState\",\r\n  get: ({ get }) => {\r\n    const folder = get(folderState);\r\n    const todoList = get(todoListState);\r\n    return todoList[folder] || {data: []};\r\n  },\r\n  set: ({ set, get }, newValue) => {\r\n    const folder = get(folderState);\r\n    const todoList = get(todoListState);\r\n    set(todoListState, { ...todoList, [folder]: {data: newValue}});\r\n  }\r\n});\r\nexport default function InputTodo() {\r\n  const folder = useRecoilValue(folderState);\r\n  const [folderTodoList, setFolderTodoList] = useRecoilState(\r\n    folderTodoListState\r\n  );\r\n  const [editTodo, setEditTodo] = useRecoilState(editTodoState);\r\n  const [input, setInput] = React.useState(\"\");\r\n  const inputRef = React.useRef(null);\r\n  console.log(editTodo);\r\n  React.useEffect(() =>{\r\n    if(!isNaN(editTodo)) {\r\n      setInput(folderTodoList.data[editTodo].todo);\r\n      inputRef.current.focus();\r\n    }\r\n  }, [editTodo])\r\n  React.useEffect(() => {\r\n    if(folder)\r\n      inputRef.current.focus();\r\n  }, [folder])\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!input.trim()) return;\r\n    const newValue = {\r\n      todo: input.trim(),\r\n      createdAt:\r\n        new Date().toLocaleDateString() + \" \" + new Date().toLocaleTimeString(),\r\n      isCompleted: false\r\n    };\r\n    if(!isNaN(editTodo)) {\r\n      setFolderTodoList([...folderTodoList.data.slice(0, editTodo), newValue,...folderTodoList.data.slice(editTodo+1)])\r\n      setEditTodo(undefined);\r\n    }\r\n    else\r\n    setFolderTodoList([...folderTodoList.data, newValue]);\r\n    setInput(\"\");\r\n  };\r\n  return (\r\n    <FormControl as=\"form\" onSubmit={handleSubmit} isDisabled={!folder}>\r\n      <InputGroup variant={\"filled\"} size={\"sm\"}>\r\n        <Input\r\n          placeholder=\"Enter todo job...\"\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          _focus={{ borderRadius: pxToRem(5) }}\r\n          ref={inputRef}\r\n        />\r\n        <InputRightElement\r\n          children={\r\n            <Circle\r\n              size={pxToRem(30)}\r\n              bg={\"orange\"}\r\n              color={\"white\"}\r\n              cursor={\"pointer\"}\r\n              _hover={{ bg: \"orange.300\" }}\r\n              _active={{ bg: \"orange.200\" }}\r\n              onClick={handleSubmit}\r\n            >\r\n              <AddIcon\r\n                w={pxToRem(20)}\r\n                h={pxToRem(20)}\r\n                _active={{ w: \"2\", h: \"2\" }}\r\n              />\r\n            </Circle>\r\n          }\r\n        />\r\n      </InputGroup>\r\n    </FormControl>\r\n  );\r\n}\r\n","import { ChevronDownIcon } from \"@chakra-ui/icons\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Center,\r\n  Checkbox,\r\n  Flex,\r\n  Menu,\r\n  MenuButton,\r\n  MenuItem,\r\n  MenuList,\r\n  Table,\r\n  Tbody,\r\n  Text,\r\n  Th,\r\n  Thead,\r\n  Tr\r\n} from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport { useRecoilState, useRecoilValue } from \"recoil\";\r\nimport { folderState } from \"../component/FolderItem\";\r\nimport { pxToRem } from \"../utils/theme.utils\";\r\nimport { folderTodoListState } from \"./InputTodo\";\r\nimport TableContent from \"./TableContent\";\r\n\r\nexport default function TodoContent() {\r\n  const folder = useRecoilValue(folderState);\r\n  const [folderTodoList, setFolderTodoList] = useRecoilState(folderTodoListState);\r\n  const [isCheckList, setCheckList] = React.useState([]);\r\n  React.useEffect(() => {\r\n    setCheckList(Array.from(folderTodoList.data, () => false))\r\n  }, [folderTodoList.data.length]);\r\n\r\n  const isAllChecked = isCheckList.every(Boolean);\r\n  const isIndeterminate = isCheckList.some(Boolean) && !isAllChecked;\r\n  const handleCheck = (id,isCheck) => {\r\n    setCheckList(prevCheckList => [...prevCheckList.slice(0,id), isCheck, ...prevCheckList.slice(id+1)]);\r\n  }\r\n  const handleChangeStatus = () => {\r\n    setFolderTodoList(folderTodoList.data.map((ele,id) =>({...ele, isCompleted: (!ele.isCompleted && isCheckList[id])})))\r\n  }\r\n  const text = !!folder\r\n    ? \"Todo folder selected. Now add todo in the folder\"\r\n    : \"No todo folder selected. Please select first or create one.\";\r\n  if (!folderTodoList.data.length)\r\n    return (\r\n      <Center p={pxToRem(20)}>\r\n        <Text>{text}</Text>\r\n      </Center>\r\n    );\r\n  return (\r\n    <Flex direction=\"column\" m={`${pxToRem(10)} ${pxToRem(20)}`} align=\"center\">\r\n      <Flex direction={'row'} wrap={'nowrap'} alignSelf={'flex-start'} justify={'space-between'} mb={pxToRem(10)}>\r\n        <Box>\r\n          <Button h={pxToRem(40)} onClick={handleChangeStatus} isDisabled={!isCheckList.some(Boolean)}>Change Status</Button>\r\n        </Box>\r\n      </Flex>\r\n        <Table variant=\"unstyled\" size={'sm'}>\r\n          <Thead borderBottom={`${pxToRem(2)} solid silver`}>\r\n            <Tr>\r\n              <Th p={pxToRem(5)}><Checkbox isChecked={isAllChecked} isIndeterminate={isIndeterminate} onChange={(e) => setCheckList(Array.from(folderTodoList.data, () => e.target.checked))}/></Th>\r\n              <Th isNumeric p={pxToRem(5)}>Id</Th>\r\n              <Th p={pxToRem(5)}>Todo</Th>\r\n              <Th p={pxToRem(5)}>Created At</Th>\r\n              <Th p={pxToRem(5)}>Status</Th>\r\n            </Tr>\r\n          </Thead>\r\n          <Tbody>\r\n            {folderTodoList.data.map(({ ...rest }, idx) => (\r\n              <TableContent {...rest} key={idx} id={idx+1} isChecked={isCheckList[idx]} setCheck={handleCheck}/>\r\n            ))}\r\n          </Tbody>\r\n        </Table>\r\n    </Flex>\r\n  );\r\n}\r\n","import { Box, Flex, Heading, Stack } from \"@chakra-ui/react\";\r\nimport { pxToRem } from \"../utils/theme.utils\";\r\nimport { ChatIcon } from \"@chakra-ui/icons\";\r\nimport TodoListFolder from \"../component/TodoListFolder\";\r\nimport TodoContent from \"../component/TodoContent\";\r\nimport InputTodo from \"../component/InputTodo\";\r\nexport default function TodosApp() {\r\n  return (\r\n    <Flex direction={\"row\"} height={\"100vh\"} overflow={\"hidden\"}>\r\n      <Box w={pxToRem(280)} bgGradient=\"linear(to-tr, orange.100, orange.200)\">\r\n        <Stack direction={\"column\"} align={\"start\"} ml={pxToRem(20)}>\r\n          <Stack direction={\"row\"} align={\"center\"}>\r\n            <ChatIcon\r\n              w={pxToRem(30)}\r\n              h={pxToRem(30)}\r\n              pos={\"relative\"}\r\n              top={pxToRem(5)}\r\n              color={\"#7928CA\"}\r\n            />\r\n            <Heading\r\n              as=\"h6\"\r\n              ml={`${pxToRem(5)} !important`}\r\n              bgGradient=\"linear(to-l, #7928CA, #FF0080)\"\r\n              bgClip={\"text\"}\r\n            >\r\n              Todo\r\n            </Heading>\r\n          </Stack>\r\n        </Stack>\r\n        <TodoListFolder />\r\n      </Box>\r\n      <Box flex={1} bgGradient=\"linear(to-t, green.200, green.500)\">\r\n        <Flex\r\n          direction={\"row\"}\r\n          wrap={\"nowrap\"}\r\n          align={\"center\"}\r\n          justify={\"center\"}\r\n          h={pxToRem(205)}\r\n          shadow={\"base\"}\r\n        >\r\n          <Box w={pxToRem(380)}>\r\n            <InputTodo />\r\n          </Box>\r\n        </Flex>\r\n        <TodoContent />\r\n      </Box>\r\n    </Flex>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {Box, ChakraProvider, Text} from \"@chakra-ui/react\"\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\r\nimport TodosApp from './routes/TodosApp';\r\nimport { pxToRem } from './utils/theme.utils';\r\nimport { RecoilRoot } from 'recoil';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <RecoilRoot>\r\n    <ChakraProvider >\r\n      <BrowserRouter>\r\n      <Routes>\r\n        <Route path=\"todos-app2.0\" element={<App/>}/>\r\n        <Route path=\"/todos-app2.0/todo-app\" element={<TodosApp/>}/>\r\n        <Route path=\"*\" element={<Box as=\"main\" p={pxToRem(5)}><Text>There's nothing here</Text></Box>}/>\r\n      </Routes>\r\n    </BrowserRouter>\r\n    </ChakraProvider>\r\n    </RecoilRoot>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}