{"version":3,"sources":["reportWebVitals.js","utils/theme.utils.js","component/FolderItem.jsx","component/TodoListFolder.jsx","component/TableContent.jsx","component/InputTodo.jsx","component/TodoContent.jsx","theme/foundations/typography.js","theme/foundations/breakpoints.js","theme/styles.global.js","theme/index.theme.js","routes/TodosApp.jsx","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","pxToRem","px","pxToVw","pxToVh","folderState","atom","key","default","FolderItem","name","useRecoilState","folder","setFolderState","bg","borderRadius","cursor","onClick","pl","textStyle","fontWeight","layerStyle","TodoListFolder","React","useState","listFolder","setListFolder","folderName","setFolderName","handleSubmit","e","preventDefault","trim","prevFolder","direction","mt","onSubmit","as","align","justify","ml","variant","value","placeholder","size","w","onChange","target","color","_hover","_active","h","length","p","map","item","idx","editTodoState","undefined","TableContent","props","id","todo","createdAt","isCompleted","isChecked","setCheck","folderTodoListState","folderTodoList","setFolderTodoList","setEditTodoState","checked","isNumeric","insetInline","mr","data","slice","todoListState","selector","get","set","newValue","todoList","InputTodo","useRecoilValue","editTodo","setEditTodo","input","setInput","inputRef","useRef","console","log","useEffect","isNaN","current","focus","Date","toLocaleDateString","toLocaleTimeString","isDisabled","_focus","ref","children","TodoContent","isCheckList","setCheckList","Array","from","isAllChecked","every","Boolean","isIndeterminate","some","handleCheck","isCheck","prevCheckList","text","m","wrap","alignSelf","mb","ele","borderBottom","rest","typography","fonts","heading","body","mono","breakpoints","base","sm","md","lg","xl","styles","global","html","fontSize","colorMode","bgGradient","theme","extendTheme","textStyles","h2","lineHeight","h4","h5","h6","config","initialColorMode","useSystemColorMode","TodosApp","useColorMode","toggleColorMode","height","overflow","className","pos","top","bgClip","flex","shadow","ReactDOM","render","StrictMode","path","element","document","getElementById"],"mappings":"uLAYeA,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,uBCPDQ,EAAU,SAACC,GAEpB,MAAM,GAAN,OADuB,IAALA,EAAD,KACjB,QAGSC,EAAS,SAACD,GAEnB,MAAM,GAAN,OADsB,IAALA,EAAU,KAC3B,OAGSE,EAAS,SAACF,GAEnB,MAAM,GAAN,OADsB,IAALA,EAAU,KAC3B,O,sDCRSG,EAAcC,YAAK,CAC9BC,IAAK,cACLC,QAAS,KAGI,SAASC,EAAT,GAA+B,IAATC,EAAQ,EAARA,KACnC,EAAiCC,YAAeN,GAAhD,mBAAOO,EAAP,KAAeC,EAAf,KAEA,OACE,cAAC,IAAD,CACEC,GAAIF,IAAWF,EAAO,aAAe,GACrCK,aAAcd,EAAQ,GACtBe,OAAQ,UACRC,QAAS,WACPJ,EAAeH,IALnB,SAQE,cAAC,IAAD,CAAMQ,GAAIf,EAAO,IAAKgB,UAAW,IAAKC,WAAY,OAAQC,WAAY,WAAtE,SAAmFX,MCd1E,SAASY,IACpB,MAAoCC,IAAMC,SAAS,IAAnD,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAmCH,IAAMC,SAAS,IAAlD,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAA2BjB,YAAeN,GAAjCQ,EAAT,oBACMgB,EAAe,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,SAEfN,GAAc,SAAAO,GAAU,4BAAQA,GAAR,CAAoBN,OAC5CC,EAAc,IACdf,EAAec,KAKnB,OACI,eAAC,IAAD,CAAMO,UAAW,SAAUC,GAAI/B,EAAO,IAAtC,UACI,cAAC,IAAD,CAAagC,SAAUP,EAAcQ,GAAG,OAAxC,SACI,eAAC,IAAD,CAAOH,UAAW,MAAOI,MAAO,MAAOC,QAAS,eAAgBC,GAAIrC,EAAO,IAA3E,UACI,cAAC,IAAD,CAAOsC,QAAQ,UAAUC,MAAOf,EAAYgB,YAAY,4BAA4BC,KAAM,KAAMC,EAAG1C,EAAO,KAAM2C,SAP3G,SAAChB,GAClBF,EAAcE,EAAEiB,OAAOL,QAM6HrB,WAAY,SACpJ,cAAC,IAAD,CAAQuB,KAAM3C,EAAQ,IAAKa,GAAI,SAAUkC,MAAO,QAAShC,OAAQ,UAAWiC,OAAQ,CAACnC,GAAI,cACzFoC,QAAS,CAACpC,GAAI,cACdG,QAASY,EAFT,SAGI,cAAC,IAAD,CAASgB,EAAG5C,EAAQ,IAAKkD,EAAGlD,EAAQ,IAAKiD,QAAS,CAACL,EAAE,IAAKM,EAAG,cAKrE1B,EAAW2B,OAEP,eAAC,IAAD,CAAMlB,UAAW,SAAjB,UACI,cAAC,IAAD,CAAKhB,GAAIf,EAAO,IAAhB,SACI,cAAC,IAAD,CAAMgC,GAAI/B,EAAO,IAAKe,UAAW,KAAjC,0BAEJ,cAAC,IAAD,UACA,cAAC,IAAD,CAAMkC,EAAC,YAAOlD,EAAO,IAArB,SAEQsB,EAAW6B,KAAI,SAACC,EAAMC,GAAP,OAAe,cAAC/C,EAAD,CAAsBC,KAAM6C,GAAXC,aAM/D,Q,2CC5CHC,EAAgBnD,YAAK,CAChCC,IAAK,gBACLC,aAASkD,IAGI,SAASC,EAAaC,GACnC,IAAQC,EAAyDD,EAAzDC,GAAIC,EAAqDF,EAArDE,KAAMC,EAA+CH,EAA/CG,UAAWC,EAAoCJ,EAApCI,YAAaC,EAAuBL,EAAvBK,UAAUC,EAAaN,EAAbM,SACpD,EAA4CvD,YAAewD,GAA3D,mBAAOC,EAAP,KAAuBC,EAAvB,KACA,EAA6B1D,YAAe8C,GAAnCa,EAAT,oBAIA,OACE,eAAC,IAAD,CAAIrB,OAAQ,CAACnC,GAAG,YAAaC,aAAcd,EAAQ,IAAKe,OAAQ,WAAhE,UACE,cAAC,IAAD,CAAIqC,EAAGpD,EAAQ,GAAf,SAAmB,cAAC,IAAD,CAAUgE,UAAWA,EAAWnB,SAAU,SAAChB,GAAD,OAAOoC,EAASL,EAAG,EAAG/B,EAAEiB,OAAOwB,cAC5F,cAAC,IAAD,CAAIlB,EAAGpD,EAAQ,GAAIuE,WAAS,EAA5B,SAA8BX,IAC9B,cAAC,IAAD,CAAIR,EAAGpD,EAAQ,GAAf,SAAoB6D,IACpB,cAAC,IAAD,CAAIT,EAAGpD,EAAQ,GAAf,SAAoB8D,IACpB,cAAC,IAAD,CAAIV,EAAGpD,EAAQ,GAAf,SAAoB+D,EAAc,YAAc,eAChD,cAAC,IAAD,CAAIX,EAAGpD,EAAQ,GAAIwE,YAAa,OAAhC,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAQ7B,KAAM3C,EAAQ,IAAKgD,OAAQ,CAACnC,GAAI,aAAcG,QAAS,kBAAMqD,EAAiBT,EAAI,IAA1F,SACE,cAAC,IAAD,CAAUhB,EAAG5C,EAAQ,IAAKkD,EAAGlD,EAAQ,IAAK+C,MAAO,iBAAiB0B,GAAIzE,EAAQ,KAAMiD,QAAS,CAACL,EAAE,IAAKM,EAAE,SAEzG,cAAC,IAAD,CAAQP,KAAM3C,EAAQ,IAAKgD,OAAQ,CAAEnC,GAAI,aAAcG,QAf1C,WACnBoD,EAAkB,GAAD,mBAAKD,EAAeO,KAAKC,MAAM,EAAGf,EAAG,IAArC,YAA4CO,EAAeO,KAAKC,MAAMf,OAcjF,SACE,cAAC,IAAD,CAAYb,MAAM,UAAUR,GAAIrC,EAAO,KAAM0C,EAAG5C,EAAQ,IAAKkD,EAAGlD,EAAQ,IAAKiD,QAAS,CAACL,EAAE,IAAKM,EAAE,iBCjBrG,IAAM0B,EAAgBvE,YAAK,CAChCC,IAAK,gBACLC,QAAS,KAGE2D,EAAsBW,YAAS,CAC1CvE,IAAK,sBACLwE,IAAK,YAAc,IAAXA,EAAU,EAAVA,IACAnE,EAASmE,EAAI1E,GAEnB,OADiB0E,EAAIF,GACLjE,IAAW,CAAC+D,KAAM,KAEpCK,IAAK,WAAeC,GAAc,IAA1BD,EAAyB,EAAzBA,IAAKD,EAAoB,EAApBA,IACLnE,EAASmE,EAAI1E,GACb6E,EAAWH,EAAIF,GACrBG,EAAIH,EAAD,YAAC,eAAoBK,GAArB,kBAAgCtE,EAAS,CAAC+D,KAAMM,SAGxC,SAASE,IACtB,IAAMvE,EAASwE,YAAe/E,GAC9B,EAA4CM,YAC1CwD,GADF,mBAAOC,EAAP,KAAuBC,EAAvB,KAGA,EAAgC1D,YAAe8C,GAA/C,mBAAO4B,EAAP,KAAiBC,EAAjB,KACA,EAA0B/D,IAAMC,SAAS,IAAzC,mBAAO+D,EAAP,KAAcC,EAAd,KACMC,EAAWlE,IAAMmE,OAAO,MAC9BC,QAAQC,IAAIP,GACZ9D,IAAMsE,WAAU,WACVC,MAAMT,KACRG,EAASpB,EAAeO,KAAKU,GAAUvB,MACvC2B,EAASM,QAAQC,WAElB,CAACX,IACJ9D,IAAMsE,WAAU,WACXjF,GACD6E,EAASM,QAAQC,UAClB,CAACpF,IACJ,IAAMiB,EAAe,SAACC,GAEpB,GADAA,EAAEC,iBACGwD,EAAMvD,OAAX,CACA,IAAMiD,EAAW,CACfnB,KAAMyB,EAAMvD,OACZ+B,WACE,IAAIkC,MAAOC,qBAAuB,KAAM,IAAID,MAAOE,qBACrDnC,aAAa,GAEX8B,MAAMT,GAKVhB,EAAkB,GAAD,mBAAKD,EAAeO,MAApB,CAA0BM,MAJzCZ,EAAkB,GAAD,mBAAKD,EAAeO,KAAKC,MAAM,EAAGS,IAAlC,CAA6CJ,GAA7C,YAAyDb,EAAeO,KAAKC,MAAMS,EAAS,MAC7GC,OAAY5B,IAId8B,EAAS,MAEX,OACE,cAAC,IAAD,CAAanD,GAAG,OAAOD,SAAUP,EAAcuE,YAAaxF,EAA5D,SACE,eAAC,IAAD,CAAY6B,QAAS,SAAUG,KAAM,KAArC,UACE,cAAC,IAAD,CACED,YAAY,oBACZD,MAAO6C,EACPzC,SAAU,SAAChB,GAAD,OAAO0D,EAAS1D,EAAEiB,OAAOL,QACnC2D,OAAQ,CAAEtF,aAAcd,EAAQ,IAChCqG,IAAKb,IAEP,cAAC,IAAD,CACEc,SACE,cAAC,IAAD,CACE3D,KAAM3C,EAAQ,IACda,GAAI,SACJkC,MAAO,QACPhC,OAAQ,UACRiC,OAAQ,CAAEnC,GAAI,cACdoC,QAAS,CAAEpC,GAAI,cACfG,QAASY,EAPX,SASE,cAAC,IAAD,CACEgB,EAAG5C,EAAQ,IACXkD,EAAGlD,EAAQ,IACXiD,QAAS,CAAEL,EAAG,IAAKM,EAAG,gBCxEvB,SAASqD,IACtB,IAAM5F,EAASwE,YAAe/E,GAC9B,EAA4CM,YAAewD,GAA3D,mBAAOC,EAAP,KAAuBC,EAAvB,KACA,EAAoC9C,IAAMC,SAAS,IAAnD,mBAAOiF,EAAP,KAAoBC,EAApB,KACAnF,IAAMsE,WAAU,WACda,EAAaC,MAAMC,KAAKxC,EAAeO,MAAM,kBAAM,QAClD,CAACP,EAAeO,KAAKvB,SAExB,IAAMyD,EAAeJ,EAAYK,MAAMC,SACjCC,EAAkBP,EAAYQ,KAAKF,WAAaF,EAChDK,EAAc,SAACrD,EAAGsD,GACtBT,GAAa,SAAAU,GAAa,4BAAQA,EAAcxC,MAAM,EAAEf,IAA9B,CAAmCsD,GAAnC,YAA+CC,EAAcxC,MAAMf,EAAG,SAK5FwD,EAASzG,EACX,mDACA,8DACJ,OAAKwD,EAAeO,KAAKvB,OAOvB,eAAC,IAAD,CAAMlB,UAAU,SAASoF,EAAC,UAAKlH,EAAO,IAAZ,YAAmBD,EAAO,KAAOmC,MAAM,SAAjE,UACE,cAAC,IAAD,CAAMJ,UAAW,MAAOqF,KAAM,SAAUC,UAAW,aAAcjF,QAAS,gBAAiBkF,GAAIrH,EAAO,IAAtG,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAQ+C,EAAG/C,EAAO,IAAKa,QAhBJ,WACzBoD,EAAkBD,EAAeO,KAAKrB,KAAI,SAACoE,EAAI7D,GAAL,mBAAC,eAAe6D,GAAhB,IAAqB1D,aAAe0D,EAAI1D,aAAeyC,EAAY5C,UAenDuC,YAAaK,EAAYQ,KAAKF,SAAlF,+BAGF,eAAC,IAAD,CAAOtE,QAAQ,WAAWG,KAAM,KAAhC,UACE,cAAC,IAAD,CAAO+E,aAAY,UAAK1H,EAAQ,GAAb,iBAAnB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAIoD,EAAGpD,EAAQ,GAAf,SAAmB,cAAC,IAAD,CAAUgE,UAAW4C,EAAcG,gBAAiBA,EAAiBlE,SAAU,SAAChB,GAAD,OAAO4E,EAAaC,MAAMC,KAAKxC,EAAeO,MAAM,kBAAM7C,EAAEiB,OAAOwB,iBACrK,cAAC,IAAD,CAAIC,WAAS,EAACnB,EAAGpD,EAAQ,GAAzB,gBACA,cAAC,IAAD,CAAIoD,EAAGpD,EAAQ,GAAf,kBACA,cAAC,IAAD,CAAIoD,EAAGpD,EAAQ,GAAf,wBACA,cAAC,IAAD,CAAIoD,EAAGpD,EAAQ,GAAf,yBAGJ,cAAC,IAAD,UACGmE,EAAeO,KAAKrB,KAAI,WAAcE,GAAd,IAAMoE,EAAN,2BACvB,wBAACjE,EAAD,2BAAkBiE,GAAlB,IAAwBrH,IAAKiD,EAAKK,GAAIL,EAAI,EAAGS,UAAWwC,EAAYjD,GAAMU,SAAUgD,gBAvB5F,cAAC,IAAD,CAAQ7D,EAAGpD,EAAQ,IAAnB,SACE,cAAC,IAAD,CAAMkB,UAAW,KAAjB,SAAwBkG,MC1ChC,IAQeQ,EARI,CACfC,MAAO,CACHC,QAAQ,4BACRC,KAAK,4BACLC,KAAK,mFCKEC,EATK,CAChBC,KAAM,MACNC,GAAI,QACJC,GAAI,QACJC,GAAI,QACJC,GAAI,SACJ,MAAO,UCYIC,EAlBC,CACZC,OAAQ,SAAC7E,GAEL,OADA+B,QAAQC,IAAIhC,GACL,CACH8E,KAAO,CACHC,UAAU/E,EAAMgF,UAAN,6BAEdZ,KAAM,CACFhF,MAA2B,UAApBY,EAAMgF,UAAwB,YAAc,WACnDC,WAAgC,UAApBjF,EAAMgF,UAAwB,qCAAuC,6CAErF,gBAAiB,CACbC,WAAgC,UAApBjF,EAAMgF,UAAwB,wCAA0C,uCC8BrFE,EArCDC,YAAY,yBACtBb,eACGL,GAFkB,IAGrBmB,WAAY,CACRC,GAAG,CACCN,SAAS,CAAC1I,EAAQ,KAClBmB,WAAY,OACZ8H,WAAY,KAEhBC,GAAG,CACCR,SAAS,CAAC1I,EAAQ,KAClBmB,WAAY,OACZ8H,WAAY,KAEhBE,GAAI,CACAT,SAAU,CAAC1I,EAAQ,KACnBmB,WAAY,OACZ8H,WAAY,KAEhBG,GAAG,CACCV,SAAS,CAAC1I,EAAQ,KAClBmB,WAAY,SACZ8H,WAAY,MAEhB7F,EAAG,CACCsF,SAAU,CAAC1I,EAAQ,KACnBmB,WAAY,SACZ8H,WAAY,OAGpBI,OAAS,CACLC,iBAAkB,QAClBC,oBAAoB,GAExBhB,YC/BW,SAASiB,IACtB,MAAoCC,cAA7Bd,EAAP,EAAOA,UAAUe,EAAjB,EAAiBA,gBACX1F,EAA0B,SAAd2E,EAClB,OACE,eAAC,IAAD,CAAM1G,UAAW,MAAO0H,OAAQ,QAASC,SAAU,SAAnD,UACE,eAAC,IAAD,CAAKhH,EAAG1C,EAAO,KAAM2J,UAAU,eAA/B,UACE,cAAC,IAAD,CAAO5H,UAAW,SAAUI,MAAO,QAASE,GAAIrC,EAAO,IAAvD,SACE,eAAC,IAAD,CAAO+B,UAAW,MAAOI,MAAO,SAAhC,UACE,cAAC,IAAD,CACEO,EAAG5C,EAAQ,IACXkD,EAAGlD,EAAQ,IACX8J,IAAK,WACLC,IAAK5J,EAAO,GACZ4C,MAAO,YAET,cAAC,IAAD,CACE7B,UAAW,KACXqB,GAAE,UAAKrC,EAAO,GAAZ,eACF0I,WAAW,iCACXoB,OAAQ,OAJV,uBAUJ,cAAC3I,EAAD,OAEF,eAAC,IAAD,CAAK4I,KAAM,EAAX,UACE,eAAC,IAAD,CACEhI,UAAW,SACXqF,KAAM,SACNjF,MAAO,SACPC,QAAS,aACTY,EAAG/C,EAAO,KACV+J,OAAQ,OANV,UAQE,cAAC,IAAD,CAAK3C,UAAW,WAAYrF,GAAI/B,EAAO,IAAKqH,GAAIrH,EAAO,IAAKsE,GAAIvE,EAAO,IAAvE,SACE,cAAC,IAAD,CAAQ8D,UAAWA,EAAWnB,SAAU6G,MAE1C,cAAC,IAAD,CAAK9G,EAAG1C,EAAO,KAAf,SACE,cAACgF,EAAD,SAGJ,cAACqB,EAAD,UCzCR4D,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACA,cAAC,IAAD,CAAgBxB,MAAOA,EAAvB,SACE,cAAC,IAAD,UACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOyB,KAAK,eAAeC,QAC3B,qCACA,cAAC,IAAD,CAAiBjB,iBAAkBT,EAAMQ,OAAOC,mBAC9C,cAACE,EAAD,SAGF,cAAC,IAAD,CAAOc,KAAK,IAAIC,QAAS,cAAC,IAAD,CAAKnI,GAAG,OAAOgB,EAAGpD,EAAQ,GAA1B,SAA8B,cAAC,IAAD,kDAM7DwK,SAASC,eAAe,SAM1BlL,M","file":"static/js/main.b8d9bcc8.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","export const pxToRem = (px) => {\r\n    const remValue = (px * 100)/(1080 + 1024 + 512)\r\n    return `${remValue}rem`\r\n}\r\n\r\nexport const pxToVw = (px) => {\r\n    const vwValue = (px * 100)/1080\r\n    return `${vwValue}vw`\r\n}\r\n\r\nexport const pxToVh = (px) => {\r\n    const vhValue = (px * 100)/1024\r\n    return `${vhValue}vh`\r\n}","import { ListItem, Text } from \"@chakra-ui/react\";\r\nimport { atom, useRecoilState } from \"recoil\";\r\nimport { pxToRem, pxToVw } from \"../utils/theme.utils\";\r\n\r\nexport const folderState = atom({\r\n  key: \"folderState\",\r\n  default: \"\"\r\n});\r\n\r\nexport default function FolderItem({ name }) {\r\n  const [folder, setFolderState] = useRecoilState(folderState);\r\n\r\n  return (\r\n    <ListItem\r\n      bg={folder === name ? \"orange.200\" : \"\"}\r\n      borderRadius={pxToRem(5)}\r\n      cursor={\"pointer\"}\r\n      onClick={() => {\r\n        setFolderState(name);\r\n      }}\r\n    >\r\n      <Text pl={pxToVw(15)} textStyle={'p'} fontWeight={'bold'} layerStyle={'selected'}>{name}</Text>\r\n    </ListItem>\r\n  );\r\n}\r\n","import { AddIcon } from \"@chakra-ui/icons\";\r\nimport { Box, Circle, Flex, FormControl, Input, List, Stack, Text } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { pxToRem, pxToVh, pxToVw } from \"../utils/theme.utils\";\r\nimport FolderItem, { folderState } from \"./FolderItem\";\r\n\r\nexport default function TodoListFolder() {\r\n    const [listFolder, setListFolder] = React.useState([]);\r\n    const [folderName,setFolderName] = React.useState('');\r\n    const [, setFolderState] = useRecoilState(folderState);\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(!folderName.trim())\r\n            return; \r\n        setListFolder(prevFolder => [...prevFolder, folderName]);\r\n        setFolderName('');\r\n        setFolderState(folderName)\r\n    }\r\n    const handleChange = (e) => {\r\n        setFolderName(e.target.value);\r\n    }\r\n    return (\r\n        <Flex direction={\"column\"} mt={pxToVh(10)}>\r\n            <FormControl onSubmit={handleSubmit} as='form'>\r\n                <Stack direction={\"row\"} align={\"end\"} justify={\"space-evenly\"} ml={pxToVw(20)}>\r\n                    <Input variant='flushed' value={folderName} placeholder='Enter todo folder name...' size={'xs'} w={pxToVw(200)} onChange={handleChange} layerStyle={'base'} />\r\n                    <Circle size={pxToRem(30)} bg={\"orange\"} color={\"white\"} cursor={\"pointer\"} _hover={{bg: 'orange.300'}}\r\n                    _active={{bg: 'orange.200'}}\r\n                    onClick={handleSubmit}>\r\n                        <AddIcon w={pxToRem(20)} h={pxToRem(20)} _active={{w:'2', h: '2'}}/>\r\n                    </Circle>\r\n                </Stack>\r\n            </FormControl>\r\n            {\r\n                listFolder.length ?\r\n                (\r\n                    <Flex direction={'column'}>\r\n                        <Box pl={pxToVw(20)}>\r\n                            <Text mt={pxToVh(10)} textStyle={'h5'}>TodoFolder</Text>\r\n                        </Box>\r\n                        <Box>\r\n                        <List p={`0 ${pxToVw(5)}`}>\r\n                            {\r\n                                listFolder.map((item, idx) => <FolderItem key={idx} name={item}/>)\r\n                            }\r\n                        </List>\r\n                        </Box>\r\n                    </Flex>\r\n                ) :\r\n                null\r\n            }\r\n        </Flex>\r\n    )\r\n}","import { DeleteIcon, EditIcon } from \"@chakra-ui/icons\";\r\nimport { Checkbox, Circle, HStack, Td, Tr } from \"@chakra-ui/react\";\r\nimport { atom, useRecoilState } from \"recoil\";\r\nimport { pxToRem, pxToVw } from \"../utils/theme.utils\";\r\nimport { folderTodoListState } from \"./InputTodo\";\r\n\r\nexport const editTodoState = atom({\r\n  key: \"editTodoState\",\r\n  default: undefined\r\n})\r\n\r\nexport default function TableContent(props) {\r\n  const { id, todo, createdAt, isCompleted, isChecked,setCheck } = props;\r\n  const [folderTodoList, setFolderTodoList] = useRecoilState(folderTodoListState);\r\n  const [, setEditTodoState] = useRecoilState(editTodoState); \r\n  const handleDelete = () => {\r\n    setFolderTodoList([...folderTodoList.data.slice(0, id-1), ...folderTodoList.data.slice(id)])\r\n  }\r\n  return (\r\n    <Tr _hover={{bg:'green.300', borderRadius: pxToRem(10), cursor: 'pointer'}}>\r\n      <Td p={pxToRem(5)}><Checkbox isChecked={isChecked} onChange={(e) => setCheck(id-1, e.target.checked)}/></Td>\r\n      <Td p={pxToRem(5)} isNumeric>{id}</Td>\r\n      <Td p={pxToRem(5)}>{todo}</Td>\r\n      <Td p={pxToRem(5)}>{createdAt}</Td>\r\n      <Td p={pxToRem(5)}>{isCompleted ? \"Completed\" : \"Incomplete\"}</Td>\r\n      <Td p={pxToRem(5)} insetInline={'auto'}>\r\n        <HStack>\r\n          <Circle size={pxToRem(30)} _hover={{bg: 'green.400'}} onClick={() => setEditTodoState(id -1)}>\r\n            <EditIcon w={pxToRem(20)} h={pxToRem(20)} color= 'blackAlpha.500' mr={pxToRem(2.5)} _active={{w:'2', h:'2'}}/>\r\n          </Circle>\r\n          <Circle size={pxToRem(30)} _hover={{ bg: 'green.400'}} onClick={handleDelete}>\r\n            <DeleteIcon color='red.700' ml={pxToVw(2.5)} w={pxToRem(20)} h={pxToRem(20)} _active={{w:'2', h:'2'}}/>\r\n          </Circle>\r\n        </HStack>\r\n      </Td>\r\n    </Tr>\r\n  );\r\n}\r\n","import { AddIcon } from \"@chakra-ui/icons\";\r\nimport {\r\n  Circle,\r\n  FormControl,\r\n  Input,\r\n  InputGroup,\r\n  InputRightElement\r\n} from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport { atom, selector, useRecoilState, useRecoilValue } from \"recoil\";\r\nimport { pxToRem } from \"../utils/theme.utils\";\r\nimport { folderState } from \"./FolderItem\";\r\nimport { editTodoState } from \"./TableContent\";\r\n\r\nexport const todoListState = atom({\r\n  key: \"todoListState\",\r\n  default: {}\r\n});\r\n\r\nexport const folderTodoListState = selector({\r\n  key: \"folderTodoListState\",\r\n  get: ({ get }) => {\r\n    const folder = get(folderState);\r\n    const todoList = get(todoListState);\r\n    return todoList[folder] || {data: []};\r\n  },\r\n  set: ({ set, get }, newValue) => {\r\n    const folder = get(folderState);\r\n    const todoList = get(todoListState);\r\n    set(todoListState, { ...todoList, [folder]: {data: newValue}});\r\n  }\r\n});\r\nexport default function InputTodo() {\r\n  const folder = useRecoilValue(folderState);\r\n  const [folderTodoList, setFolderTodoList] = useRecoilState(\r\n    folderTodoListState\r\n  );\r\n  const [editTodo, setEditTodo] = useRecoilState(editTodoState);\r\n  const [input, setInput] = React.useState(\"\");\r\n  const inputRef = React.useRef(null);\r\n  console.log(editTodo);\r\n  React.useEffect(() =>{\r\n    if(!isNaN(editTodo)) {\r\n      setInput(folderTodoList.data[editTodo].todo);\r\n      inputRef.current.focus();\r\n    }\r\n  }, [editTodo])\r\n  React.useEffect(() => {\r\n    if(folder)\r\n      inputRef.current.focus();\r\n  }, [folder])\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!input.trim()) return;\r\n    const newValue = {\r\n      todo: input.trim(),\r\n      createdAt:\r\n        new Date().toLocaleDateString() + \" \" + new Date().toLocaleTimeString(),\r\n      isCompleted: false\r\n    };\r\n    if(!isNaN(editTodo)) {\r\n      setFolderTodoList([...folderTodoList.data.slice(0, editTodo), newValue,...folderTodoList.data.slice(editTodo+1)])\r\n      setEditTodo(undefined);\r\n    }\r\n    else\r\n    setFolderTodoList([...folderTodoList.data, newValue]);\r\n    setInput(\"\");\r\n  };\r\n  return (\r\n    <FormControl as=\"form\" onSubmit={handleSubmit} isDisabled={!folder}>\r\n      <InputGroup variant={\"filled\"} size={\"sm\"}>\r\n        <Input\r\n          placeholder=\"Enter todo job...\"\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          _focus={{ borderRadius: pxToRem(5) }}\r\n          ref={inputRef}\r\n        />\r\n        <InputRightElement\r\n          children={\r\n            <Circle\r\n              size={pxToRem(30)}\r\n              bg={\"orange\"}\r\n              color={\"white\"}\r\n              cursor={\"pointer\"}\r\n              _hover={{ bg: \"orange.300\" }}\r\n              _active={{ bg: \"orange.200\" }}\r\n              onClick={handleSubmit}\r\n            >\r\n              <AddIcon\r\n                w={pxToRem(20)}\r\n                h={pxToRem(20)}\r\n                _active={{ w: \"2\", h: \"2\" }}\r\n              />\r\n            </Circle>\r\n          }\r\n        />\r\n      </InputGroup>\r\n    </FormControl>\r\n  );\r\n}\r\n","import {\r\n  Box,\r\n  Button,\r\n  Center,\r\n  Checkbox,\r\n  Flex,\r\n  Table,\r\n  Tbody,\r\n  Text,\r\n  Th,\r\n  Thead,\r\n  Tr\r\n} from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport { useRecoilState, useRecoilValue } from \"recoil\";\r\nimport { folderState } from \"../component/FolderItem\";\r\nimport { pxToRem, pxToVh, pxToVw } from \"../utils/theme.utils\";\r\nimport { folderTodoListState } from \"./InputTodo\";\r\nimport TableContent from \"./TableContent\";\r\n\r\nexport default function TodoContent() {\r\n  const folder = useRecoilValue(folderState);\r\n  const [folderTodoList, setFolderTodoList] = useRecoilState(folderTodoListState);\r\n  const [isCheckList, setCheckList] = React.useState([]);\r\n  React.useEffect(() => {\r\n    setCheckList(Array.from(folderTodoList.data, () => false))\r\n  }, [folderTodoList.data.length]);\r\n\r\n  const isAllChecked = isCheckList.every(Boolean);\r\n  const isIndeterminate = isCheckList.some(Boolean) && !isAllChecked;\r\n  const handleCheck = (id,isCheck) => {\r\n    setCheckList(prevCheckList => [...prevCheckList.slice(0,id), isCheck, ...prevCheckList.slice(id+1)]);\r\n  }\r\n  const handleChangeStatus = () => {\r\n    setFolderTodoList(folderTodoList.data.map((ele,id) =>({...ele, isCompleted: (!ele.isCompleted && isCheckList[id])})))\r\n  }\r\n  const text = !!folder\r\n    ? \"Todo folder selected. Now add todo in the folder\"\r\n    : \"No todo folder selected. Please select first or create one.\";\r\n  if (!folderTodoList.data.length)\r\n    return (\r\n      <Center p={pxToRem(20)}>\r\n        <Text textStyle={'h6'}>{text}</Text>\r\n      </Center>\r\n    );\r\n  return (\r\n    <Flex direction=\"column\" m={`${pxToVh(10)} ${pxToVw(20)}`} align=\"center\">\r\n      <Flex direction={'row'} wrap={'nowrap'} alignSelf={'flex-start'} justify={'space-between'} mb={pxToVh(20)}>\r\n        <Box>\r\n          <Button h={pxToVh(40)} onClick={handleChangeStatus} isDisabled={!isCheckList.some(Boolean)}>Change Status</Button>\r\n        </Box>\r\n      </Flex>\r\n        <Table variant=\"unstyled\" size={'sm'}>\r\n          <Thead borderBottom={`${pxToRem(2)} solid silver`}>\r\n            <Tr>\r\n              <Th p={pxToRem(5)}><Checkbox isChecked={isAllChecked} isIndeterminate={isIndeterminate} onChange={(e) => setCheckList(Array.from(folderTodoList.data, () => e.target.checked))}/></Th>\r\n              <Th isNumeric p={pxToRem(5)}>Id</Th>\r\n              <Th p={pxToRem(5)}>Todo</Th>\r\n              <Th p={pxToRem(5)}>Created At</Th>\r\n              <Th p={pxToRem(5)}>Status</Th>\r\n            </Tr>\r\n          </Thead>\r\n          <Tbody>\r\n            {folderTodoList.data.map(({ ...rest }, idx) => (\r\n              <TableContent {...rest} key={idx} id={idx+1} isChecked={isCheckList[idx]} setCheck={handleCheck}/>\r\n            ))}\r\n          </Tbody>\r\n        </Table>\r\n    </Flex>\r\n  );\r\n}\r\n","const typography = {\r\n    fonts: {\r\n        heading: `\"Nunito Sans\", sans-serif`,\r\n        body: `\"Nunito Sans\", sans-serif`,\r\n        mono: `SFMono-Regular,Menlo,Monaco,Consolas,\"Liberation Mono\",\"Courier New\",monospace`,\r\n      },\r\n}\r\n\r\nexport default typography;","const breakpoints = {\r\n    base: '0px',\r\n    sm: '425px',\r\n    md: '768px',\r\n    lg: '960px',\r\n    xl: '1200px',\r\n    \"2xl\": '1536px'\r\n}\r\n\r\nexport default breakpoints;","const styles =  {\r\n    global: (props) => {\r\n        console.log(props);\r\n        return {\r\n            html : {\r\n                fontSize: props.colorMode === 'light' ? `calc(1vw + 1vh + .5vmin)`: `calc(1vw + 1vh + .5vmin)`,\r\n            },\r\n            body: {\r\n                color: props.colorMode === 'light' ? 'green.700' : 'blue.600',\r\n                bgGradient: props.colorMode === 'light' ? 'linear(to-t, green.200, green.500)' : 'linear(to-tr, gray.800 50%, gray.900 25%)'\r\n            },\r\n            '.globalSideBg': {\r\n                bgGradient: props.colorMode === 'light' ? 'linear(to-tr, orange.100, orange.200)' : 'linear(to-t, teal.900, teal.800)'\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default styles;","import {extendTheme } from \"@chakra-ui/react\"\r\nimport typography from \"./foundations/typography\";\r\nimport breakpoints from \"./foundations/breakpoints\";\r\nimport styles from \"./styles.global\";\r\nimport { pxToRem } from \"../utils/theme.utils\";\r\nconst theme = extendTheme({\r\n    breakpoints,\r\n    ...typography,\r\n    textStyles: {\r\n        h2:{\r\n            fontSize:[pxToRem(48)],\r\n            fontWeight: 'bold',\r\n            lineHeight: 1.5,\r\n        },\r\n        h4:{\r\n            fontSize:[pxToRem(40)],\r\n            fontWeight: 'bold',\r\n            lineHeight: 1.5,\r\n        },\r\n        h5: {\r\n            fontSize: [pxToRem(28)],\r\n            fontWeight: 'bold',\r\n            lineHeight: 1.5,\r\n        },\r\n        h6:{\r\n            fontSize:[pxToRem(24)],\r\n            fontWeight: 'normal',\r\n            lineHeight: 1.25\r\n        },\r\n        p: {\r\n            fontSize: [pxToRem(20)],\r\n            fontWeight: 'normal',\r\n            lineHeight: 1.25\r\n        }\r\n    },\r\n    config : {\r\n        initialColorMode: 'light',\r\n        useSystemColorMode: false,\r\n    },\r\n    styles\r\n})\r\n\r\nexport default theme;","import { Box, Flex, Heading, Stack, Switch, Text, useColorMode } from \"@chakra-ui/react\";\r\nimport { pxToRem, pxToVh, pxToVw } from \"../utils/theme.utils\";\r\nimport { ChatIcon } from \"@chakra-ui/icons\";\r\nimport TodoListFolder from \"../component/TodoListFolder\";\r\nimport TodoContent from \"../component/TodoContent\";\r\nimport InputTodo from \"../component/InputTodo\";\r\nimport React from \"react\";\r\nimport theme from \"../theme/index.theme\";\r\nexport default function TodosApp() {\r\n  const {colorMode,toggleColorMode} = useColorMode();\r\n  const isChecked = colorMode === 'dark';\r\n  return (\r\n    <Flex direction={\"row\"} height={\"100vh\"} overflow={\"hidden\"}>\r\n      <Box w={pxToVw(280)} className='globalSideBg'>\r\n        <Stack direction={\"column\"} align={\"start\"} ml={pxToVw(20)}>\r\n          <Stack direction={\"row\"} align={\"center\"}>\r\n            <ChatIcon\r\n              w={pxToRem(30)}\r\n              h={pxToRem(30)}\r\n              pos={\"relative\"}\r\n              top={pxToVh(5)}\r\n              color={\"#7928CA\"}\r\n            />\r\n            <Text\r\n              textStyle={'h2'}\r\n              ml={`${pxToVw(5)} !important`}\r\n              bgGradient=\"linear(to-l, #7928CA, #FF0080)\"\r\n              bgClip={\"text\"}\r\n            >\r\n              Todo\r\n            </Text>\r\n          </Stack>\r\n        </Stack>\r\n        <TodoListFolder />\r\n      </Box>\r\n      <Box flex={1}>\r\n        <Flex\r\n          direction={\"column\"}\r\n          wrap={\"nowrap\"}\r\n          align={\"center\"}\r\n          justify={\"flex-start\"}\r\n          h={pxToVh(205)}\r\n          shadow={\"base\"}\r\n        >\r\n          <Box alignSelf={'flex-end'} mt={pxToVh(20)} mb={pxToVh(20)} mr={pxToVw(20)}>\r\n            <Switch isChecked={isChecked} onChange={toggleColorMode}/>\r\n          </Box>\r\n          <Box w={pxToVw(380)}>\r\n            <InputTodo />\r\n          </Box>\r\n        </Flex>\r\n        <TodoContent />\r\n      </Box>\r\n    </Flex>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Box, ChakraProvider, ColorModeScript, Text} from \"@chakra-ui/react\"\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\r\nimport TodosApp from './routes/TodosApp';\r\nimport { pxToRem } from './utils/theme.utils';\r\nimport { RecoilRoot } from 'recoil';\r\nimport theme from './theme/index.theme';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <RecoilRoot>\r\n    <ChakraProvider theme={theme}>\r\n      <BrowserRouter>\r\n      <Routes>\r\n        <Route path=\"todos-app2.0\" element={\r\n        <>\r\n        <ColorModeScript initialColorMode={theme.config.initialColorMode}/>\r\n          <TodosApp/>\r\n        </>\r\n      }/>\r\n        <Route path=\"*\" element={<Box as=\"main\" p={pxToRem(5)}><Text>There's nothing here</Text></Box>}/>\r\n      </Routes>\r\n    </BrowserRouter>\r\n    </ChakraProvider>\r\n    </RecoilRoot>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}